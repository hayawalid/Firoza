<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Firoza | Collection</title>
    <link rel="stylesheet" href="/CSS/nav-bar-white.css">
    <link rel="stylesheet" href="/CSS/Footer.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    <script src="/Javascript/nav-bar.js"></script>
    <script src="/Javascript/openproduct.js"></script>
    <link rel="stylesheet" href="/CSS/indian.css">
    <link rel="stylesheet" href="/CSS/indian2.css">

    <script>
        function showPopup(message) {
            const popup = document.getElementById('login-message-popup');
            const popupMessage = popup.querySelector('h2');
            popupMessage.textContent = message;

            popup.classList.add('show');
            setTimeout(() => {
                popup.classList.remove('show');
            }, 3000);
        }

        function showErrorPopup(message) {
            const popup = document.getElementById('login-message-error-popup');
            const popupMessage = popup.querySelector('h2');
            popupMessage.textContent = message;

            popup.classList.add('show');
            setTimeout(() => {
                popup.classList.remove('show');
            }, 3000);
        }

        async function addToCart(productId, price) {
            const productContainer = document.querySelector(`[data-product-id="${productId}"]`);
            const isSoldOut = productContainer.querySelector('.sold-out-label') !== null;

            if (isSoldOut) {
                showErrorPopup('This product is sold out and cannot be added to the cart.');
                return;
            }

            try {
                const response = await fetch('/user/add-to-cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, price })
                });

                if (response.ok) {
                    showPopup('Product added to cart successfully!');
                } else {
                    showErrorPopup('Failed to add product to cart. Please try again later.');
                }
            } catch (error) {
                console.error('Error:', error);
                showErrorPopup('Failed to add product to cart. Please try again later.');
            }
        }

        async function addToWishlist(productId) {
            const productContainer = document.querySelector(`[data-product-id="${productId}"]`);
            const isSoldOut = productContainer.querySelector('.sold-out-label') !== null;

            if (isSoldOut) {
                showErrorPopup('This product is sold out and cannot be added to the wishlist.');
                return;
            }

            try {
                const response = await fetch('/user/wishlist/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId })
                });

                if (response.ok) {
                    showPopup('Product added to wishlist successfully!');
                } else {
                    showErrorPopup('Failed to add product to wishlist. Please try again later.');
                }
            } catch (error) {
                console.error('Error adding to wishlist:', error);
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('sort').addEventListener('change', applyFilters);
            document.getElementById('toggle').addEventListener('change', applyFilters);
            fetchDefaultProducts();

            // Disable Add to Cart and Add to Wishlist buttons for sold-out items on page load
            document.querySelectorAll('.col').forEach(container => {
                const isSoldOut = container.querySelector('.sold-out-label') !== null;
                if (isSoldOut) {
                    const addToCartButton = container.querySelector('.add-to-cart-button');
                    const addToWishlistButton = container.querySelector('.add-to-wishlist-button');
                    if (addToCartButton) addToCartButton.disabled = true;
                    if (addToWishlistButton) addToWishlistButton.disabled = true;
                }
            });
        });

        function toggleDropdown(event, dropdownId) {
            var dropdown = document.getElementById(dropdownId);
            var arrow = dropdown.querySelector('.arrow');

            if (dropdown.style.display === "block") {
                dropdown.style.display = "none";
            } else {
                var dropdowns = document.getElementsByClassName("dropdown-content");
                for (var i = 0; i < dropdowns.length; i++) {
                    dropdowns[i].style.display = "none";
                }
                dropdown.style.display = "block";

                var filterButton = event.currentTarget;
                var buttonRect = filterButton.getBoundingClientRect();
                var dropdownRect = dropdown.getBoundingClientRect();

                arrow.style.left = (buttonRect.left + (buttonRect.width / 2) - dropdownRect.left - 5) + 'px';
            }
        }

        window.onclick = function (event) {
            var clickedElement = event.target;
            var dropdowns = document.getElementsByClassName("dropdown-content");

            var isInsideDropdown = false;

            for (var i = 0; i < dropdowns.length; i++) {
                if (clickedElement == dropdowns[i] || dropdowns[i].contains(clickedElement)) {
                    isInsideDropdown = true;
                    break;
                }
            }

            if (!clickedElement.closest('.filter-buttons') && !isInsideDropdown) {
                for (var i = 0; i < dropdowns.length; i++) {
                    dropdowns[i].style.display = "none";
                }
            }
        }

        function updatePrice(value) {
            document.getElementById('priceValue').innerText = `$0 - $${parseInt(value).toLocaleString()}`;
        }

        function applyFilters() {
            const hideSoldOut = document.getElementById('toggle').checked;
            const selectedCategories = Array.from(document.querySelectorAll('#category-dropdown input:checked')).map(checkbox => checkbox.parentElement.textContent.trim());
            const selectedColors = Array.from(document.querySelectorAll('#color-dropdown input:checked')).map(checkbox => checkbox.parentElement.textContent.trim());
            const selectedMaterials = Array.from(document.querySelectorAll('#material-dropdown input:checked')).map(checkbox => checkbox.parentElement.textContent.trim());
            const maxPrice = document.getElementById('priceRange').value;

            const productContainers = document.querySelectorAll('.col');
            productContainers.forEach(container => {
                const product = container.dataset;
                const isSoldOut = container.querySelector('.sold-out-label') !== null;

                let show = true;

                if (hideSoldOut && isSoldOut) show = false;
                if (selectedCategories.length > 0 && !selectedCategories.includes(product.category)) show = false;
                if (selectedColors.length > 0 && !selectedColors.includes(product.color)) show = false;
                if (selectedMaterials.length > 0 && !selectedMaterials.includes(product.material)) show = false;
                if (parseFloat(product.price) > maxPrice) show = false;

                container.style.display = show ? 'block' : 'none';
            });

            // Apply sorting
            const sortValue = document.getElementById('sort').value;
            sortProducts(sortValue);
        }

        function sortProducts(sortValue) {
            const productContainer = document.querySelector('.row');
            const products = Array.from(productContainer.children);

            if (sortValue === 'lowToHigh') {
                products.sort((a, b) => parseFloat(a.dataset.price) - parseFloat(b.dataset.price));
            } else if (sortValue === 'highToLow') {
                products.sort((a, b) => parseFloat(b.dataset.price) - parseFloat(a.dataset.price));
            }

            products.forEach(product => productContainer.appendChild(product));
        }

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('sort').addEventListener('change', applyFilters);
            document.getElementById('toggle').addEventListener('change', applyFilters);
            fetchDefaultProducts();
        });

        function clearFilters() {
            document.querySelectorAll('.filters input[type="checkbox"]').forEach(checkbox => checkbox.checked = false);
            document.getElementById('priceRange').value = 20000000;
            document.getElementById('priceValue').innerText = '$0 - $20,000,000';
            applyFilters();
        }

    </script>
</head>

<body>
    <%- include('./partials/Nav-bar.ejs') %>
        <div class="head">
            //<img src="/images/Indian/Newfolder/<%= img %>" alt="<%= Collection_Name %>" >
            <div class="img-text">
                <p>"<%= Collection_Description %>"</p>
            </div>
        </div>

        <div class="filters">
            <div class="toggle-container">
                <div class="toggle-switch">
                    <input type="checkbox" id="toggle" class="toggle-input" onchange="applyFilters()">
                    <label for="toggle" class="toggle-label"></label>
                </div>
                <p class="toggle-text">Hide sold out</p>
            </div>
            <span class="category filter-buttons" onclick="toggleDropdown(event, 'category-dropdown')">
                <p>Category</p>
                <i class="fa-solid fa-chevron-down"></i>
            </span>
            <span class="color filter-buttons" onclick="toggleDropdown(event, 'color-dropdown')">
                <p>Color</p>
                <i class="fa-solid fa-chevron-down"></i>
            </span>
            <span class="price filter-buttons" onclick="toggleDropdown(event, 'price-dropdown')">
                <p>Price</p>
                <i class="fa-solid fa-chevron-down"></i>
            </span>
            <span class="material filter-buttons" onclick="toggleDropdown(event, 'material-dropdown')">
                <p>Material</p>
                <i class="fa-solid fa-chevron-down"></i>
            </span>
            <button id="clear-filters-btn" onclick="clearFilters()" style="display: none;">Clear</button>
            <select name="sort" id="sort" style="margin-left: 800px;">
                <option value="">Sort by</option>
                <option value="lowToHigh">Price: low to high</option>
                <option value="highToLow">Price: high to low</option>
            </select>
        </div>

        <div id="category-dropdown" class="dropdown-content">
            <div class="arrow"></div>
            <label class="containerr" style="font-size: 12px;">Bracelets
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Necklaces
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Earrings
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Ring
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
        </div>

        <div id="color-dropdown" class="dropdown-content">
            <div class="arrow"></div>
            <label class="containerr" style="font-size: 12px;">Red
                <input type="checkbox" onchange="applyFilters()" style="font-size: 12px;">
                <span class="checkmark" style="font-size: 12px;"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Green
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Blue
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Multicolor
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">White
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Yellow
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Black
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
        </div>

        <div id="price-dropdown" class="dropdown-content">
            <div class="arrow"></div>
            <label for="priceRange">Price range: <span id="priceValue">$0 - $20,000,000</span></label>
            <input type="range" id="priceRange" min="0" max="20000000" step="10" value="20000000"
                oninput="updatePrice(this.value)" onchange="applyFilters()">
        </div>

        <div id="material-dropdown" class="dropdown-content">
            <div class="arrow"></div>
            <label class="containerr" style="font-size: 12px;">Platinum
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Gold
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Silver
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
            <label class="containerr" style="font-size: 12px;">Titanium
                <input type="checkbox" onchange="applyFilters()">
                <span class="checkmark"></span>
            </label>
        </div>

        <div class="row">
            <% products.forEach(product=> { %>
                <div class="col" data-category="<%= product.category %>" data-color="<%= product.color %>"
                    data-material="<%= product.material %>" data-price="<%= product.price %>">
                    <div class="product-grid">
                        <div class="product-image">
                            <a href="/user/product/<%= product._id %>" class="image"
                                onclick="fetchProductDetails('<%= product._id %>')">
                                <img class="img-1" src="<%= product.img %>">
                                <% if (product.sizes.every(size=> size.quantity === 0)) { %>
                                    <span class="sold-out-label">Sold Out</span>
                                    <% } %>
                            </a>
                            <ul class="product-links">
                                <li><a onclick="addToWishlist('<%= product._id %>')"><i class="fa fa-heart"></i></a>
                                </li>
                                <li><a onclick="addToCart('<%= product._id %>', '<%= product.price %>')"
                                        class="add-to-cart-btn"><i class="fa fa-shopping-cart"></i></a></li>
                            </ul>
                        </div>
                        <div class="product-content">
                            <h3 class="title"><a href="#">
                                    <%= product.name %>
                                </a></h3>
                            <div class="price">
                                <%= product.price %>
                            </div>
                        </div>

                    </div>
                </div>

                <% }); %>
        </div>
</body>

</html>